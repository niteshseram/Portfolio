{
  "metadata": {
    "access": "frei",
    "difficulty": "einfach",
    "format": "Quiz",
    "href": "/fragen/quiz/kennen-sie-styling-svg",
    "importance": "niedrig",
    "slug": "sind-Sie-mit-Styling-SVG-vertraut",
    "title": "Sind Sie mit dem Styling von SVG vertraut?",
    "topics": [
      "CSS"
    ],
    "gitHubEditUrl": "https://github.com/yangshun/front-end-interview-handbook/blob/main/packages/quiz/questions/are-you-familiar-with-styling-svg/en-US.mdx",
    "author": null,
    "companies": [],
    "created": 1630800000,
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "frameworkDefault": null,
    "frameworks": [],
    "languages": [],
    "nextQuestions": [],
    "published": true,
    "ranking": 100,
    "similarQuestions": [],
    "subtitle": null
  },
  "solution": "var Component=(()=>{var h=Object.create;var a=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var m=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),g=(t,e)=>{für(var i in e)a(t,i,{get:e[i],enumerable:!0})},r=(t,e,i,l)=>{wenn(e&&typeof e==\"Objekt\"||typeof e==\"Funktion\")für(lass s von p(e))!f.call(t,s)&&s!==i&&a(t,s,{get:()=>e[s],enumerable:!(l=u(e,s))||l.enumerable});return t};var y=(t,e,i)=>(i=t!=null?h(b(t)):{},r(e||!t||!t.__esModule?a(i,\"default\",{value:t,enumerable:!0}):i,t)),S=t=>r(a({},\"__esModule\",{value:!0}),t);var c=m((C,o)=>{o.exports=_jsx_runtime});var j={};g(j,{default:()=>w,frontmatter:()=>x});var n=y(c()),x={title:\"Are you familiar with styling SVG?\"};function d(t){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",em:\"em\",a:\"a\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"There are several ways to color shapes (including specifying attributes on the object) using inline CSS, an embedded CSS section, or an external CSS file. Most SVGs you find on the web uses inline CSS, but there are advantages and disadvantages associated with each type.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Die grundlegende Farbgebung kann durch Festlegen von zwei Attributen auf dem Knoten erfolgen: \",(0,n.jsx)(e.code,{children:\"fill\"})\" und \",(0,n.jsx)(e.code,{children:\"stroke\"})\". \",(0,n.jsx)(e.code,{children:\"fill\"})\" legt die Farbe innerhalb des Objekts fest und \",(0,n.jsx)(e.code,{children:\"stroke\"})\" legt die Farbe der Linie fest, die um das Objekt gezeichnet wird. Sie können dieselben CSS-Farbbenennungsschemata verwenden wie in HTML, egal ob es sich um Farbnamen (also \",(0,n.jsx)(e.code,{children:\"red\"}),\"), RGB-Werte (also \",(0,n.jsx)(e.code,{children:\"rgb(255,0,0)\"}),\"), Hex-Werte, RGBA-Werte usw.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-html\",children:`<rect\n  x=\"10\"\n  y=\"10\"\n  width=\"100\"\n  height=\"100\"\n  stroke=\"blue\"\n  fill=\"purple\"\n  fill-opacity=\"0.5\"\n  stroke-opacity=\"0.8\" />\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Das obige \",(0,n.jsx)(e.code,{children:'fill=\"purple\"'}),\" ist ein Beispiel für ein \",(0,n.jsx)(e.em,{children:\"presentational attribute\"}),\". Interessanterweise und anders als Inline-Styles wie \",(0,n.jsx)(e.code,{children:'style=\"fill: purple\"'}),\", das zufällig auch ein Attribut, Präsentationsattribute können \",(0,n.jsx)(e.a,{href:\"https://css-tricks.com/presentation-attributes-vs-inline-styles/\",children:\"overridden by CSS\"}),\"-Stile sein, die in einem Stylesheet definiert sind. Wenn Sie also etwas wie \",(0,n.jsx)(e.code,{children:\"svg { fill: blue; }\"}),\" tun, wird dies die definierte violette Füllung überschreiben.\"]})]})}function v(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(d,t)})):d(t)}var w=v;return S(j);})();\n;return Component;",
  "description": null
}
